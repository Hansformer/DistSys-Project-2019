# To show the debug dialog, comment out
# INITIALIZER:
# and uncomment the following line
# if __name__=="__main__":
INITIALIZER:
    from Tkinter import *
    from DWatchGUI import DWatchGUI

    root = Tk()
    root.withdraw()
    topLevel = Toplevel(root)
    topLevel.resizable(width="NO", height="NO")
    topLevel.title("DWatch")
    g = DWatchGUI(topLevel, eventhandler)

    eventhandler.start()

    root.mainloop()
    exit()


# [DS] = default state
STATECHART:
    START [DS]

    LightOFF
    LightON
    LightTimeout

    Timer
    EditTime
    EditDone

    Alarm
    EditAlarm

    Chrono
    StartChrono
    PauseChrono
    ResetChrono

# S = the source state of the transition.
# N = the destination state of the transition.
# E = the event that triggers the transition.
# O = a list of commands to be executed as the output of the transition. [DUMP(...)] is a predefined macro that prints a message.


### LIGHT FUNCTIONALITY ###

TRANSITION:
    S: Timer
    N: LightON
    E: lightOn
    O: print "set light on"
       g.setIndiglo()

TRANSITION:
    S: LightON
    N: LightOFF
    E: lightOff
    O: print "Timeout for turning light off"

TRANSITION:
    S: LightOFF
    N: Timer
    T: 2
    O: g.unsetIndiglo()
       print "Light turned off"

### TIME DISPLAY MODE ###

TRANSITION:
    S: START
    N: Timer
    T: 1 [OTT]
    O: print "BEGIN Timer"

TRANSITION:
    S: Timer
    N: Timer
    T: 1
    O: print "Time Tick"
       g.increaseTimeByOne()

TRANSITION:
    S: Timer
    N: EditTime
    E: editTime
    O: g.startSelection()
       print "Start editing time"

TRANSITION:
    S: EditTime
    N: EditTime
    E: changeMode
    O: g.selectNext()
       print "Selecting next"

TRANSITION:
    S: EditTime
    N: EditTime
    E: increase
    O: g.increaseSelection()
       print "Increased Selection"

# FIXME
TRANSITION:
    S: EditTime
    N: EditDone
    E: finishEdit
    O: print "Time saved!"

# FIXME
TRANSITION:
    S: EditDone
    N: Timer
    O: print "Back to time display"
       g.refreshTimeDisplay()

### ALARM MODE ###

TRANSITION:
    S: Timer
    N: Alarm
    E: setAlarm
    O: print "Alarm is on"

TRANSITION:
    S: Alarm
    N: Timer
    E: setAlarm
    O: print "Alarm is off"


### CHRONO MODE ###

TRANSITION:
    S: Timer
    N: Chrono
    E: changeMode
    O: print "Switched to Chrono Mode"
       g.resetChrono()
       g.refreshChronoDisplay() 

TRANSITION:
    S: Chrono
    N: StartChrono
    E: initChrono
    O: print "Starting Chrono"

# TODO: Change time to 0.01 for final version
TRANSITION:
    S: StartChrono
    N: StartChrono
    T: 0.25
    O: print "Chrono Tick"
       g.increaseChronoByOne()
       g.refreshChronoDisplay() 


TRANSITION:
    S: StartChrono
    N: PauseChrono
    E: initChrono
    O: print "Chrono paused"


TRANSITION:
    S: PauseChrono
    N: StartChrono
    E: initChrono
    O: print "Chrono resumed"

TRANSITION:
    S: StartChrono
    N: Chrono
    E: resetChrono
    O: print "Chrono resetted (chrono is running)"
       g.resetChrono()
       g.refreshChronoDisplay() 

TRANSITION:
    S: PauseChrono
    N: Chrono
    E: resetChrono
    O: print "Chrono resetted (chrono is paused)"
       g.resetChrono()
       g.refreshChronoDisplay() 


TRANSITION:
    S: Chrono
    N: Timer
    E: changeMode
    O: print "Switched to Timer Mode"
